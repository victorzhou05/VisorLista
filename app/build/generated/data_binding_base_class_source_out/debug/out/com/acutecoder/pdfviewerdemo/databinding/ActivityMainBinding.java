// Generated by view binder compiler. Do not edit!
package com.acutecoder.pdfviewerdemo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.acutecoder.pdfviewerdemo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageButton btnConfig;

  @NonNull
  public final ImageButton btnHome;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView sinElementos;

  @NonNull
  public final TextView toolbarDescription;

  @NonNull
  public final Toolbar toolbarMain;

  @NonNull
  public final TextView toolbarTitle;

  private ActivityMainBinding(@NonNull FrameLayout rootView, @NonNull ImageButton btnBack,
      @NonNull ImageButton btnConfig, @NonNull ImageButton btnHome, @NonNull FrameLayout container,
      @NonNull RecyclerView recyclerView, @NonNull TextView sinElementos,
      @NonNull TextView toolbarDescription, @NonNull Toolbar toolbarMain,
      @NonNull TextView toolbarTitle) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnConfig = btnConfig;
    this.btnHome = btnHome;
    this.container = container;
    this.recyclerView = recyclerView;
    this.sinElementos = sinElementos;
    this.toolbarDescription = toolbarDescription;
    this.toolbarMain = toolbarMain;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnConfig;
      ImageButton btnConfig = ViewBindings.findChildViewById(rootView, id);
      if (btnConfig == null) {
        break missingId;
      }

      id = R.id.btnHome;
      ImageButton btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      FrameLayout container = (FrameLayout) rootView;

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.sinElementos;
      TextView sinElementos = ViewBindings.findChildViewById(rootView, id);
      if (sinElementos == null) {
        break missingId;
      }

      id = R.id.toolbarDescription;
      TextView toolbarDescription = ViewBindings.findChildViewById(rootView, id);
      if (toolbarDescription == null) {
        break missingId;
      }

      id = R.id.toolbarMain;
      Toolbar toolbarMain = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMain == null) {
        break missingId;
      }

      id = R.id.toolbarTitle;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new ActivityMainBinding((FrameLayout) rootView, btnBack, btnConfig, btnHome, container,
          recyclerView, sinElementos, toolbarDescription, toolbarMain, toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
